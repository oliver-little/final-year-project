The following command will start bash in an interactive container containing the python code.
From here, you can generate new data and import it into the server
    kubectl run python-shell --rm -i --tty --image oliverlittle.azurecr.io/python_client -- bash

To run inserts, you will need access to the Cassandra username and password:
This command will get the username, although it's likely that this will be demo-superuser
    kubectl get secrets/demo-superuser --template="{{.data.username}}" | base64 -d
This command will get the password:
    kubectl get secrets/demo-superuser --template="{{.data.password}}" | base64 -d

From there, create a CassandraConnector:
    connector = CassandraConnector("demo-dc1-service", 9042, {username}, {password})

Run an insert:
    CassandraUploadHandler(connector).create_from_csv("/path/to/file.csv", "keyspace", "table", ["partition", "keys])

Query the cluster:
    ClusterManager("orchestrator-service").cassandra_table("keyspace", "table").evaluate()