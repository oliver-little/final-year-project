syntax = "proto3";

option java_package = "org.oliverlittle.clusterprocess";

import "table_model.proto";
import "data_source.proto";

service WorkerComputeService {
    // Computes a partial result
    rpc ComputePartialResultCassandra(ComputePartialResultCassandraRequest) returns (stream StreamedTableResult);
    rpc GetLocalCassandraNode(GetLocalCassandraNodeRequest) returns (GetLocalCassandraNodeResult);
    rpc ProcessQueryPlanItem(QueryPlanItem) returns (ProcessQueryPlanItemResult);
    rpc GetCachedResult(GetCachedResultRequest) returns (stream StreamedTableResult);
}

message GetLocalCassandraNodeRequest {

}

message GetLocalCassandraNodeResult {
    InetSocketAddress address = 1;
}

message ComputePartialResultCassandraRequest {
    Table table = 1;
    CassandraDataSource data_source = 2;
    CassandraTokenRange token_range = 3;
}

message ProcessQueryPlanItemResult {
    bool success = 1;
}

message GetCachedResultRequest {
    Table table = 1;
}


// Query Plan Items
message QueryPlanItem {
    oneof item {
        PrepareResult prepare_result = 1;
        DeleteResult delete_result = 2;
        PreparePartition prepare_partition = 3;
        GetPartition get_partition = 4;
        DeletePartition delete_partition = 5;
    }
}

message PrepareResult {
    PartialDataSource data_source = 1;
    Table table = 2;
}

message DeleteResult {
    PartialDataSource data_source = 1;
    Table table = 2;
}

message PreparePartition {
    PartialDataSource data_source = 1;
    uint32 total_partitions = 2;
}

message GetPartition {
    PartialDataSource data_source = 1;
    repeated string other_worker_urls = 2;
}

message DeletePartition {
    PartialDataSource data_source = 1;
}
